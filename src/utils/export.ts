import type { Story } from '../types';
import html2canvas from 'html2canvas';
import { jsPDF } from 'jspdf';

export async function downloadStoryAsPDF(story: Story): Promise<void> {
  try {
    // Create a temporary container for the story content
    const container = document.createElement('div');
    container.innerHTML = `
      <div style="padding: 20px; font-family: Arial, sans-serif;">
        <h1 style="font-size: 24px; margin-bottom: 20px;">${story.title}</h1>
        ${story.content.split('\n').map(p => `<p style="margin-bottom: 10px;">${p}</p>`).join('')}
      </div>
    `;
    document.body.appendChild(container);

    // Convert the container to canvas
    const canvas = await html2canvas(container);
    document.body.removeChild(container);

    // Create PDF
    const pdf = new jsPDF({
      orientation: 'portrait',
      unit: 'px',
      format: [canvas.width, canvas.height]
    });

    // Add the canvas as image to PDF
    pdf.addImage(
      canvas.toDataURL('image/jpeg', 1.0),
      'JPEG',
      0,
      0,
      canvas.width,
      canvas.height
    );

    // Download the PDF
    pdf.save(`${story.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.pdf`);
  } catch (error) {
    console.error('Error generating PDF:', error);
    alert('Failed to download story. Please try again.');
  }
}

export async function shareStory(story: Story): Promise<void> {
  try {
    // Create a nicely formatted version of the story
    const formattedStory = `
${story.title}

${story.content}

Generated by Story Wizard
`;

    // Always use clipboard as the primary sharing method
    await navigator.clipboard.writeText(formattedStory);
    alert('Story copied to clipboard! You can now share it with others.');
  } catch (error) {
    console.error('Error sharing story:', error);
    alert('Failed to copy story to clipboard. Please try again.');
  }
}